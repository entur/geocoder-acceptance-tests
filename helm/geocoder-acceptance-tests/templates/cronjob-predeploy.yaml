apiVersion: batch/v1
kind: CronJob
metadata:
  labels:
    {{- include "common.labels" . | indent 4 }}
  name: {{ template "app.name" . }}-predeploy
  namespace: {{ .Release.Namespace }}
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      # delete completed or failed jobs after 3 days (to give some time for error analysis)
      # jobs should normally be deleted automatically by marduk after graph building completion
      ttlSecondsAfterFinished: 259200
      template:
        spec:
          containers:
          - name: elasticsearch
            image: eu.gcr.io/entur-system-1287/es-static:master-v26-8908900a
            imagePullPolicy: Always
            env:
            - name: GCS_BASE_PATH
              value: gs://kakka-dev/es-data/
            - name: ES_DATA_PATH
              value: data/es-data-20221209042748.tar.gz
            resources:
              limits:
                cpu: 2
                memory: 1600Mi
              requests:
                cpu: 500m
                memory: 1600Mi
            ports:
            - containerPort: 9200
              protocol: TCP
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          - name: pelias-api
            image: eu.gcr.io/entur-system-1287/pelias:master-v264-a497248a
            imagePullPolicy: Always
            resources:
              limits:
                cpu: 800m
                memory: 750Mi
              requests:
                cpu: 200m
                memory: 500Mi
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          - name: geocoder-acceptance-tests
            image: {{ .Values.image.identifier }}
            imagePullPolicy: {{ .Values.image.imagePullPolicy }}
            args: ["local"]
            env:
            - name: LOCAL
              value: "true"
            - name: GOOGLE_PROJECT_ID
              value: {{ .Values.environment.projectId }}
            - name: SLACK_URL
              valueFrom:
                secretKeyRef:
                  key: slack-url
                  name: {{ .Values.environment.slackUrl }}
            resources:
              limits:
                cpu: {{ .Values.resources.cpuLimit }}
                memory: {{ .Values.resources.memLimit }}
              requests:
                cpu: {{ .Values.resources.cpuRequest }}
                memory: {{ .Values.resources.memRequest }}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Never
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: application
          serviceAccountName: application
          terminationGracePeriodSeconds: 30
  schedule: 0 0 * * *
  successfulJobsHistoryLimit: 1
  suspend: true
status: {}
